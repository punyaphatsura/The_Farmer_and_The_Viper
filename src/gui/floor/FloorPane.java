package gui.floor;

import java.util.ArrayList;

import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;

public class FloorPane extends GridPane {
	private ArrayList<FloorSquare> allCells;
	
	public FloorPane() {
		// Initialize allCells array list
		allCells = new ArrayList<FloorSquare>();

		// Set floor size
		setPrefWidth(800);
		setPrefHeight(800);
		
		// Set alignment
		setAlignment(Pos.CENTER);
		
		// Set default background color
		setBackground(new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));
		
		// Set map structure
		int[] map = {
				97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
				97, 354, 389, 405, 344, 373, 344, 344, 328, 405, 405, 344, 405, 357, 344, 344, 405, 344, 328, 344, 344, 328, 405, 370, 97,
				
				97, 325, 256, 292, 292, 260, 276, 260, 292, 292, 276, 292, 292, 260, 260, 292, 260, 260, 292, 260, 276, 292, 272, 343, 97,
				
				97, 324, 246, 143, 223, 191, 207, 255, 287, 287, 191, 159, 287, 255, 223, 191, 255, 143, 255, 207, 159, 287, 228, 343, 97,
				97, 324, 246, 175, 127, 207, 239, 143, 143, 287, 223, 191, 127, 287, 175, 175, 271, 287, 255, 175, 287, 127, 230, 342, 97,
				97, 326, 244, 159, 175, 175, 143, 175, 255, 207, 207, 223, 287, 127, 287, 255, 175, 255, 223, 255, 223, 255, 229, 343, 97,
				97, 326, 247, 287, 255, 287, 159, 255, 239, 287, 223, 127, 175, 271, 191, 127, 175, 239, 223, 239, 143, 207, 231, 343, 97,
				97, 325, 247, 287, 223, 287, 127, 175, 191, 175, 239, 143, 287, 159, 127, 255, 271, 159, 127, 255, 223, 271, 230, 341, 97,
				97, 327, 247, 175, 191, 287, 207, 271, 207, 287, 191, 143, 175, 127, 159, 159, 255, 175, 239, 191, 223, 191, 230, 343, 97,
				97, 326, 244, 287, 159, 191, 127, 159, 159, 255, 159, 143, 239, 191, 191, 255, 191, 159, 223, 207, 239, 271, 229, 343, 97,
				97, 326, 246, 287, 159, 287, 175, 175, 255, 191, 287, 159, 127, 143, 207, 287, 207, 255, 207, 175, 207, 287, 230, 341, 97,
				97, 325, 244, 223, 159, 207, 255, 191, 143, 239, 175, 143, 191, 191, 239, 223, 223, 239, 191, 223, 175, 239, 230, 340, 97,
				97, 326, 245, 255, 127, 127, 159, 159, 143, 127, 175, 223, 175, 143, 255, 159, 191, 271, 239, 191, 143, 287, 228, 340, 97,
				97, 325, 245, 223, 271, 239, 271, 239, 223, 143, 207, 223, 127, 239, 143, 127, 287, 207, 255, 175, 207, 207, 229, 340, 97,
				97, 324, 244, 143, 191, 175, 207, 127, 143, 175, 143, 223, 143, 127, 207, 159, 239, 159, 207, 223, 159, 287, 231, 343, 97,
				97, 325, 246, 223, 207, 223, 239, 255, 223, 159, 175, 175, 143, 255, 191, 143, 287, 207, 255, 175, 127, 191, 230, 342, 97,
				97, 324, 247, 271, 239, 255, 175, 239, 287, 271, 207, 175, 143, 271, 287, 207, 143, 143, 255, 239, 127, 287, 231, 342, 97,
				97, 324, 245, 255, 143, 271, 287, 191, 239, 255, 159, 255, 287, 255, 191, 239, 175, 255, 127, 175, 143, 255, 230, 341, 97,
				97, 324, 244, 175, 191, 271, 191, 223, 255, 287, 271, 175, 127, 127, 159, 271, 287, 143, 127, 239, 191, 287, 230, 342, 97,
				97, 325, 245, 143, 207, 207, 255, 159, 191, 191, 127, 223, 175, 143, 191, 191, 223, 223, 255, 143, 255, 223, 230, 343, 97,
				97, 327, 246, 287, 239, 159, 271, 159, 143, 207, 207, 271, 223, 159, 271, 207, 127, 287, 207, 271, 239, 255, 228, 342, 97,
				97, 324, 244, 207, 255, 223, 207, 223, 271, 239, 223, 271, 191, 175, 287, 175, 127, 223, 239, 159, 175, 207, 229, 342, 97,
				
				97, 324, 257, 309, 309, 293, 293, 277, 277, 261, 277, 293, 277, 277, 261, 261, 277, 277, 277, 293, 277, 309, 273, 340, 97,
				
				97, 355, 388, 388, 372, 356, 372, 388, 388, 388, 372, 372, 388, 372, 356, 356, 388, 356, 356, 372, 356, 372, 356, 371, 97,
				97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
		};
		
		// Add floor cell to array
		for (int row = 0; row < 25; row++) {
			for (int col = 0; col < 25; col++) {
				FloorSquare cell = new FloorSquare(col, row, map[row*25 + col]);
				allCells.add(cell);
				add(cell, col, row);
			}
		}
	}
}
